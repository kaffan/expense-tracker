{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm(props) {\n  _s();\n\n  // const [title, setTitleChange] = useState('');\n  // const [amnt, setAmntChange] = useState('');\n  // const [date, setDate] = useState('');\n  // using only one state for all 3 variables\n  const [formVar, setFormChange] = useState({\n    title: '',\n    amnt: '',\n    date: ''\n  }); // the state change functions like 'setFormChange' do not immediately change the value of the \n  // associated state variable, rather react schedules the state variables for update\n  // so when we have multiple states and those states depend on previous states \n  // so if we change or update the state variable like below then it may happen that\n  // previous state's value is still not updated and current state value gets updated\n  // that will make our app jumbled up.\n  // so we call an arrow function inside the state change function\n\n  const titleChangeHandler = event => {\n    //formVar.title = event.target.value;\n    setFormChange(prevState => {\n      return { ...formVar,\n        title: event.target.value\n      };\n    });\n    console.log(formVar);\n  };\n\n  const amntChangeHandler = event => {\n    setFormChange(prevState => {\n      return { ...formVar,\n        amnt: event.target.value\n      };\n    });\n    console.log(formVar);\n  };\n\n  const dateChangeHandler = event => {\n    setFormChange(prevState => {\n      return { ...formVar,\n        date: event.target.value\n      };\n    });\n    console.log(formVar);\n  }; // const titleChangeHandler = (event) =>\n  // {\n  //     formVar.title = event.target.value;\n  //     setFormChange(formVar);\n  //     console.log(formVar);\n  // }\n  // const amntChangeHandler = (event) =>\n  // {\n  //   formVar.amnt = event.target.value;\n  //   setFormChange(formVar);\n  //   console.log(formVar);\n  // }\n  // const dateChangeHandler = (event) =>\n  // {\n  //     formVar.date = event.target.value;\n  //     setFormChange(formVar);\n  //     console.log(formVar);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"Number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amntChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ExpenseForm, \"CrTyc5UbQAK4ZNx1g8oxGKWJ+Bs=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","formVar","setFormChange","title","amnt","date","titleChangeHandler","event","prevState","target","value","console","log","amntChangeHandler","dateChangeHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nfunction ExpenseForm(props)\n{\n    // const [title, setTitleChange] = useState('');\n    // const [amnt, setAmntChange] = useState('');\n    // const [date, setDate] = useState('');\n    \n    // using only one state for all 3 variables\n    const [formVar, setFormChange] = useState(\n      {\n        title: '',\n        amnt: '',\n        date: ''\n      }\n    );\n    // the state change functions like 'setFormChange' do not immediately change the value of the \n    // associated state variable, rather react schedules the state variables for update\n    // so when we have multiple states and those states depend on previous states \n    // so if we change or update the state variable like below then it may happen that\n    // previous state's value is still not updated and current state value gets updated\n    // that will make our app jumbled up.\n    // so we call an arrow function inside the state change function\n\n    const titleChangeHandler = (event) =>\n    {\n        //formVar.title = event.target.value;\n        setFormChange((prevState)=>\n        {\n          return {\n            ...formVar, title : event.target.value\n          }\n        });\n        console.log(formVar);\n    }\n    const amntChangeHandler = (event) =>\n    {\n      setFormChange((prevState)=>\n        {\n          return {\n            ...formVar, amnt : event.target.value\n          }\n        });\n        console.log(formVar);\n    }\n    const dateChangeHandler = (event) =>\n    {\n      setFormChange((prevState)=>\n      {\n        return {\n          ...formVar, date : event.target.value\n        }\n      });\n      console.log(formVar);\n    }\n    // const titleChangeHandler = (event) =>\n    // {\n    //     formVar.title = event.target.value;\n    //     setFormChange(formVar);\n    //     console.log(formVar);\n    // }\n    // const amntChangeHandler = (event) =>\n    // {\n    //   formVar.amnt = event.target.value;\n    //   setFormChange(formVar);\n    //   console.log(formVar);\n    // }\n    // const dateChangeHandler = (event) =>\n    // {\n    //     formVar.date = event.target.value;\n    //     setFormChange(formVar);\n    //     console.log(formVar);\n    // }\n    return (\n      <div>\n        <form action=\"#\">\n          <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n              <label >Title</label>\n              <input type=\"text\" onChange={titleChangeHandler}/>\n            </div>\n            <div className=\"new-expense__control\">\n              <label >Amount</label>\n              <input type=\"Number\" min=\"0.01\" step=\"0.01\" onChange={amntChangeHandler}/>\n            </div>\n            <div className=\"new-expense__control\">\n              <label >Date</label>\n              <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\n            </div>\n          </div>\n          <div className=\"new-expense__actions\">\n              <button type=\"submit\">Add Expense</button>\n          </div>\n        </form>\n      </div>\n    );\n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}