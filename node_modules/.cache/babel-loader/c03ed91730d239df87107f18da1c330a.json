{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/affan/expense-tracker/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react/cjs/react.development';\nimport ExpenseChart from './ExpenseChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  let [currYear, setCurrYear] = useState('2019');\n  const onDateChange = year => {\n    setCurrYear(year);\n    console.log(currYear);\n  };\n  // console.log(props.expenses);\n  const filteredExpenses = props.expenses.filter(ele => {\n    return ele.date.getFullYear().toString() === currYear;\n  });\n  // console.log(filteredExpenses);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: currYear,\n        OnYearChange: onDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseChart, {\n        expenses: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"expenses-list__fallback\",\n        children: \"No Expenses Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this) : filteredExpenses.map(obj => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        //we add 'key' prop to any custom components or html elements in order\n        // for react to understand the elements of lists uniquely\n        // when we don't add this prop, then what react does is, it add new div element\n        // at the end of the list and updates the content inside the element, which is\n        // bad for performance and may lead to bugs.\n        title: obj.title,\n        amount: obj.amount,\n        date: obj.date\n      }, obj.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n_s(Expenses, \"RMjUdBVwMGhOY1Bu3PQdSiKO6Mg=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","ExpenseItem","Card","ExpensesFilter","useState","ExpenseChart","Expenses","props","currYear","setCurrYear","onDateChange","year","console","log","filteredExpenses","expenses","filter","ele","date","getFullYear","toString","length","map","obj","title","amount","id"],"sources":["/home/sony/Desktop/affan/expense-tracker/src/components/Expenses/Expenses.js"],"sourcesContent":["import React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react/cjs/react.development';\nimport ExpenseChart from './ExpenseChart';\n\nfunction Expenses(props)\n{\n    let [currYear, setCurrYear] = useState('2019');\n    const onDateChange = (year) =>\n    {\n        setCurrYear(year);\n        console.log(currYear);\n    }\n    // console.log(props.expenses);\n    const filteredExpenses = props.expenses.filter((ele)=>\n    {\n      return ele.date.getFullYear().toString() === currYear;\n    });\n    // console.log(filteredExpenses);\n    return (\n      <div>\n        <Card className=\"expenses\">\n          <ExpensesFilter\n            selected={currYear}\n            OnYearChange={onDateChange}\n          ></ExpensesFilter>\n          <ExpenseChart expenses={filteredExpenses}></ExpenseChart>\n          {filteredExpenses.length === 0 ? (\n            <p className=\"expenses-list__fallback\">No Expenses Found</p>\n          ) : (\n            filteredExpenses.map((obj) => (\n              <ExpenseItem\n                key={obj.id}\n                //we add 'key' prop to any custom components or html elements in order\n                // for react to understand the elements of lists uniquely\n                // when we don't add this prop, then what react does is, it add new div element\n                // at the end of the list and updates the content inside the element, which is\n                // bad for performance and may lead to bugs.\n                title={obj.title}\n                amount={obj.amount}\n                date={obj.date}\n              ></ExpenseItem>\n            ))\n          )}\n        </Card>\n      </div>\n    );\n}\n\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,SAASC,QAAQ,CAACC,KAAK,EACvB;EAAA;EACI,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAMM,YAAY,GAAIC,IAAI,IAC1B;IACIF,WAAW,CAACE,IAAI,CAAC;IACjBC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EACzB,CAAC;EACD;EACA,MAAMM,gBAAgB,GAAGP,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAAEC,GAAG,IACnD;IACE,OAAOA,GAAG,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKZ,QAAQ;EACvD,CAAC,CAAC;EACF;EACA,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACxB,QAAC,cAAc;QACb,QAAQ,EAAEA,QAAS;QACnB,YAAY,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QACX,eAClB,QAAC,YAAY;QAAC,QAAQ,EAAEI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAgB,EACxDA,gBAAgB,CAACO,MAAM,KAAK,CAAC,gBAC5B;QAAG,SAAS,EAAC,yBAAyB;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAI,GAE5DP,gBAAgB,CAACQ,GAAG,CAAEC,GAAG,iBACvB,QAAC,WAAW;QAEV;QACA;QACA;QACA;QACA;QACA,KAAK,EAAEA,GAAG,CAACC,KAAM;QACjB,MAAM,EAAED,GAAG,CAACE,MAAO;QACnB,IAAI,EAAEF,GAAG,CAACL;MAAK,GARVK,GAAG,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAUd,CACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACH;AAEZ;AAAC,GA1CQpB,QAAQ;AAAA,KAARA,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}