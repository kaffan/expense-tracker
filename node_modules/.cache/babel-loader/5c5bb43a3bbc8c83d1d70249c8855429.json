{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/ExpenseItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem(props) {\n  _s();\n\n  // useState is React hook which is used to dynamically change the values on user interfaces.\n  // it should be used directly inside the functional component also not inside any \n  // nested function.\n  // it returns array of 2 elements. first element represents that variable which can be changed dynamically/\n  // Second element represents function which is used to update the variable ofn UI dynamically.\n  const [title, changeTitle] = useState(props.title);\n\n  function clickHandler() {\n    changeTitle('New Title');\n    console.log(title); // when we console log the variable then we will still see the old value of the\n    // variable because calling the stateChange function only schedules\n    // the variable for update and it takes time for the variable to actually change \n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold underline\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ExpenseItem, \"7CsS++YB8km8YUUnV1aF/l6g4XI=\");\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/ExpenseItem.js"],"names":["React","useState","ExpenseDate","Card","ExpenseItem","props","title","changeTitle","clickHandler","console","log","date","amount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EACA;AAAA;;AACI;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAArC;;AAEA,WAASE,YAAT,GACA;AACED,IAAAA,WAAW,CAAC,WAAD,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAFF,CAGE;AACA;AACA;AACD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAED,KAAK,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,8BAAd;AAAA,kBAA8CL;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,wBAAuCD,KAAK,CAACO,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAQ,MAAA,OAAO,EAAEJ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH;;GA5BQJ,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\nfunction ExpenseItem(props)\n{\n    // useState is React hook which is used to dynamically change the values on user interfaces.\n    // it should be used directly inside the functional component also not inside any \n    // nested function.\n    // it returns array of 2 elements. first element represents that variable which can be changed dynamically/\n    // Second element represents function which is used to update the variable ofn UI dynamically.\n\n    const [title, changeTitle] = useState(props.title);\n\n    function clickHandler()\n    {\n      changeTitle('New Title');\n      console.log(title);  \n      // when we console log the variable then we will still see the old value of the\n      // variable because calling the stateChange function only schedules\n      // the variable for update and it takes time for the variable to actually change \n    }\n    return (\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date}></ExpenseDate>\n        <div className=\"expense-item__description\">\n          <h2 className=\"text-3xl font-bold underline\">{title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        <button onClick={clickHandler}>Change Title</button>\n      </Card>\n    );\n}\n\nexport default ExpenseItem;"]},"metadata":{},"sourceType":"module"}