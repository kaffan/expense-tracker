{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  let [currYear, setCurrYear] = useState('2019');\n\n  const onDateChange = year => {\n    setCurrYear(year);\n    console.log(currYear);\n  };\n\n  const DisplayExpense = ele => {\n    return ele.map(obj => {\n      /*#__PURE__*/\n      _jsxDEV(ExpenseItem, {\n        //we add 'key' prop to any custom components or html elements in order\n        // for react to understand the elements of lists uniquely\n        // when we don't add this prop, then what react does is, it add new div element\n        // at the end of the list and updates the content inside the element, which is\n        // bad for performance and may lead to bugs.\n        title: ele.title,\n        amount: ele.amount,\n        date: ele.date\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  const filteredExpenses = props.expenses.filter(ele => {\n    return ele.date.getFullYear().toString() == currYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: currYear,\n        OnYearChange: onDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), filteredExpenses.length == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Expenses Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }, this) : DisplayExpense(filteredExpenses)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Expenses, \"RMjUdBVwMGhOY1Bu3PQdSiKO6Mg=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/Expenses.js"],"names":["React","ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","currYear","setCurrYear","onDateChange","year","console","log","DisplayExpense","ele","map","obj","title","amount","date","id","filteredExpenses","expenses","filter","getFullYear","toString","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EACA;AAAA;;AACI,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,MAAD,CAAtC;;AACA,QAAMK,YAAY,GAAIC,IAAD,IACrB;AACIF,IAAAA,WAAW,CAACE,IAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH,GAJD;;AAKA,QAAMM,cAAc,GAAIC,GAAD,IACvB;AACI,WAAQA,GAAG,CAACC,GAAJ,CAASC,GAAD,IAAS;AACvB;AAAA,cAAC,WAAD;AAEE;AACA;AACA;AACA;AACA;AACA,QAAA,KAAK,EAAEF,GAAG,CAACG,KAPb;AAQE,QAAA,MAAM,EAAEH,GAAG,CAACI,MARd;AASE,QAAA,IAAI,EAAEJ,GAAG,CAACK;AATZ,SACOL,GAAG,CAACM,EADX;AAAA;AAAA;AAAA;AAAA;AAWD,KAZO,CAAR;AAcH,GAhBD;;AAiBA,QAAMC,gBAAgB,GAAGf,KAAK,CAACgB,QAAN,CAAeC,MAAf,CAAuBT,GAAD,IAC/C;AACE,WAAOA,GAAG,CAACK,IAAJ,CAASK,WAAT,GAAuBC,QAAvB,MAAqClB,QAA5C;AACD,GAHwB,CAAzB;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEA,QADZ;AAEE,QAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGY,gBAAgB,CAACK,MAAjB,IAAyB,CAAzB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7B,GAAwDb,cAAc,CAACQ,gBAAD,CALzE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWH;;GAxCQhB,Q;;KAAAA,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react/cjs/react.development';\n\nfunction Expenses(props)\n{\n    let [currYear, setCurrYear] = useState('2019');\n    const onDateChange = (year) =>\n    {\n        setCurrYear(year);\n        console.log(currYear);\n    }\n    const DisplayExpense = (ele) =>\n    {\n        return (ele.map((obj) => {\n          <ExpenseItem\n            key={ele.id}\n            //we add 'key' prop to any custom components or html elements in order\n            // for react to understand the elements of lists uniquely\n            // when we don't add this prop, then what react does is, it add new div element\n            // at the end of the list and updates the content inside the element, which is\n            // bad for performance and may lead to bugs.\n            title={ele.title}\n            amount={ele.amount}\n            date={ele.date}\n          ></ExpenseItem>;\n        })\n      )\n    }\n    const filteredExpenses = props.expenses.filter((ele)=>\n    {\n      return ele.date.getFullYear().toString() == currYear;\n    });\n    return (\n      <div>\n        <Card className=\"expenses\">\n          <ExpensesFilter\n            selected={currYear}\n            OnYearChange={onDateChange}\n          ></ExpensesFilter>\n          {filteredExpenses.length==0 ? <p>No Expenses Found</p> : DisplayExpense(filteredExpenses)}\n        </Card>\n      </div>\n    );\n}\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}