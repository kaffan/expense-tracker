{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  let [currYear, setCurrYear] = useState('2019');\n\n  const onDateChange = year => {\n    setCurrYear(year);\n    console.log(currYear);\n  };\n\n  const DisplayExpense = ele => {\n    return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      //we add 'key' prop to any custom components or html elements in order \n      // for react to understand the elements of lists uniquely\n      // when we don't add this prop, then what react does is, it add new div element\n      // at the end of the list and updates the content inside the element, which is \n      // bad for performance and may lead to bugs. \n      title: ele.title,\n      amount: ele.amount,\n      date: ele.date\n    }, ele.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this);\n  };\n\n  const filteredExpenses = props.expenses.filter(ele => {\n    return ele.date.getFullYear().toString() == currYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: currYear,\n        OnYearChange: onDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), filteredExpenses.map((ele, i) => DisplayExpense(ele))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Expenses, \"RMjUdBVwMGhOY1Bu3PQdSiKO6Mg=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/Expenses.js"],"names":["React","ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","currYear","setCurrYear","onDateChange","year","console","log","DisplayExpense","ele","title","amount","date","id","filteredExpenses","expenses","filter","getFullYear","toString","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EACA;AAAA;;AACI,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,MAAD,CAAtC;;AACA,QAAMK,YAAY,GAAIC,IAAD,IACrB;AACIF,IAAAA,WAAW,CAACE,IAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH,GAJD;;AAKA,QAAMM,cAAc,GAAIC,GAAD,IACvB;AACI,wBACA,QAAC,WAAD;AAEE;AACA;AACA;AACA;AACA;AACA,MAAA,KAAK,EAAEA,GAAG,CAACC,KAPb;AAQE,MAAA,MAAM,EAAED,GAAG,CAACE,MARd;AASE,MAAA,IAAI,EAAEF,GAAG,CAACG;AATZ,OACOH,GAAG,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,YADA;AAaH,GAfD;;AAgBA,QAAMC,gBAAgB,GAAGb,KAAK,CAACc,QAAN,CAAeC,MAAf,CAAuBP,GAAD,IAC/C;AACE,WAAOA,GAAG,CAACG,IAAJ,CAASK,WAAT,GAAuBC,QAAvB,MAAqChB,QAA5C;AACD,GAHwB,CAAzB;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEA,QADZ;AAEE,QAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGU,gBAAgB,CAACK,GAAjB,CAAqB,CAACV,GAAD,EAAMW,CAAN,KAAYZ,cAAc,CAACC,GAAD,CAA/C,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWH;;GAvCQT,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react/cjs/react.development';\n\nfunction Expenses(props)\n{\n    let [currYear, setCurrYear] = useState('2019');\n    const onDateChange = (year) =>\n    {\n        setCurrYear(year);\n        console.log(currYear);\n    }\n    const DisplayExpense = (ele) =>\n    {\n        return (\n        <ExpenseItem\n          key={ele.id}\n          //we add 'key' prop to any custom components or html elements in order \n          // for react to understand the elements of lists uniquely\n          // when we don't add this prop, then what react does is, it add new div element\n          // at the end of the list and updates the content inside the element, which is \n          // bad for performance and may lead to bugs. \n          title={ele.title}\n          amount={ele.amount}\n          date={ele.date}\n        ></ExpenseItem>\n        )\n    }\n    const filteredExpenses = props.expenses.filter((ele)=>\n    {\n      return ele.date.getFullYear().toString() == currYear;\n    });\n    return (\n      <div>\n        <Card className=\"expenses\">\n          <ExpensesFilter\n            selected={currYear}\n            OnYearChange={onDateChange}\n          ></ExpensesFilter>\n          {filteredExpenses.map((ele, i) => DisplayExpense(ele))}\n        </Card>\n      </div>\n    );\n}\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}