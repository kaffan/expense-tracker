{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/ExpenseItem.js\";\nimport React, { useState } from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\nfunction ExpenseItem(props) {\n  // useState is React hook which is used to dynamically change the values on user interfaces.\n  // it should be used directly inside the functional component also not inside any \n  // nested function.\n  // it returns array of 2 elements. first element represents that variable which can be changed dynamically/\n  // Second element represents function which is used to update the variable ofn UI dynamically.\n  const [title, changeTitle] = useState(props.title);\n\n  function clickHandler() {\n    changeTitle('New Title');\n    console.log(title); // when we console log the variable then we will still see the old value of the\n    // variable because calling the stateChange function only schedules\n    // the variable for update and it takes time for the variable to actually change \n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"expense-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpenseDate, {\n    date: props.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-item__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-3xl font-bold underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-item__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"$\", props.amount)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Change Title\"));\n}\n\nexport default ExpenseItem;","map":{"version":3,"sources":["/home/sony/Desktop/affan/reactjs-folder/first_project/src/components/Expenses/ExpenseItem.js"],"names":["React","useState","ExpenseDate","Card","ExpenseItem","props","title","changeTitle","clickHandler","console","log","date","amount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EACA;AACI;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAArC;;AAEA,WAASE,YAAT,GACA;AACED,IAAAA,WAAW,CAAC,WAAD,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAFF,CAGE;AACA;AACA;AACD;;AACD,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAED,KAAK,CAACM,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CL,KAA9C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCD,KAAK,CAACO,MAA7C,CAFF,CAFF,eAME;AAAQ,IAAA,OAAO,EAAEJ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF;AAUH;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\nfunction ExpenseItem(props)\n{\n    // useState is React hook which is used to dynamically change the values on user interfaces.\n    // it should be used directly inside the functional component also not inside any \n    // nested function.\n    // it returns array of 2 elements. first element represents that variable which can be changed dynamically/\n    // Second element represents function which is used to update the variable ofn UI dynamically.\n\n    const [title, changeTitle] = useState(props.title);\n\n    function clickHandler()\n    {\n      changeTitle('New Title');\n      console.log(title);  \n      // when we console log the variable then we will still see the old value of the\n      // variable because calling the stateChange function only schedules\n      // the variable for update and it takes time for the variable to actually change \n    }\n    return (\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date}></ExpenseDate>\n        <div className=\"expense-item__description\">\n          <h2 className=\"text-3xl font-bold underline\">{title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        <button onClick={clickHandler}>Change Title</button>\n      </Card>\n    );\n}\n\nexport default ExpenseItem;"]},"metadata":{},"sourceType":"module"}